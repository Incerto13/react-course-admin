
services:

  react-course-admin_postgres:
    container_name: react-course-admin_postgres
    build:
      context: ./server
      dockerfile: ./docker/postgres/Dockerfile   
    environment:      
      POSTGRES_DB: react-course-admin     
      POSTGRES_USER: postgres      
      POSTGRES_PASSWORD: postgres
    ports:
      - "${REACT_COURSE_ADMIN_POSTGRES_PORT}:${REACT_COURSE_ADMIN_POSTGRES_PORT}"
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
  
  react-course-admin_pgweb: 
    container_name: react-course-admin_pgweb
    image: sosedoff/pgweb
    environment: 
      PGWEB_DATABASE_URL: "postgres://postgres:postgres@react-course-admin_postgres:${REACT_COURSE_ADMIN_POSTGRES_PORT}/react-course-admin?sslmode=disable"
    ports: 
      - "${REACT_COURSE_ADMIN_PG_WEB_PORT}:8081"
    restart: unless-stopped

  react-course-admin_server:
    container_name: react-course-admin_server
    build:
      context: ./server
      dockerfile: ./docker/server/Dockerfile 
    environment:
      REACT_COURSE_ADMIN_TYPEORM_HOST: $REACT_COURSE_ADMIN_TYPEORM_HOST
      REACT_COURSE_ADMIN_POSTGRES_PORT: $REACT_COURSE_ADMIN_POSTGRES_PORT
    ports:
      - "${REACT_COURSE_ADMIN_SERVER_PORT}:3001"
    restart: unless-stopped

  react-course-admin_web:
    container_name: react-course-admin_web
    build:
      context: ./web
      dockerfile: ./docker/Dockerfile
    ports:
     - "${REACT_COURSE_ADMIN_WEB_PORT}:80"
    restart: unless-stopped